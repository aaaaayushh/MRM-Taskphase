import numpy as np
import cv2 as cv
img=cv.imread('/home/aayush/Desktop/Hand1.jpg')
hsv=cv.cvtColor(img,cv.COLOR_BGR2HSV)
kernel=np.ones((3,3), np.uint8)

lower_skin=np.array([0,20,70], dtype=np.uint8)
upper_skin=np.array([20,255,255], dtype=np.uint8)

mask=cv.inRange(hsv,lower_skin,upper_skin) 
mask=cv.dilate(mask,kernel,iterations = 4)
mask=cv.GaussianBlur(mask,(5,5),100)

#finding contours
contours,hierarchy = cv.findContours(mask, cv.RETR_TREE, cv.CHAIN_APPROX_SIMPLE)
cnt=max(contours, key = lambda x: cv.contourArea(x))
 
#approx contour
epsilon = 0.1*cv.arcLength(cnt,True)
approx = cv.approxPolyDP(cnt,epsilon,True)

#convex hull
hull=cv.convexHull(cnt)

areahull=cv.contourArea(hull)
areacnt=cv.contourArea(cnt)
arearatio=((areahull-areacnt)/areacnt)

hull=cv.convexHull(approx, returnPoints=False)
defects=cv.convexityDefects(approx,hull)
#l=no of defects
l=0

#counting defects
for i in range(defects.shape[0]):
	s,e,f,d = defects[i,0]
	start = tuple(cnt[s][0])
	end = tuple(cnt[e][0])
	far = tuple(cnt[f][0])
	#pt=(100,100)
	a=math.sqrt((end[0]-start[0])**2 + (end[i]-start[i])**2)
	b=math.sqrt((far[0]-start[0])**2 + (far[i]-start[i])**2)
	c=math.sqrt((end[0]-far[0])**2 + (end[i]-far[i])**2)
	s=(a+b+c)/2
	ar=math.sqrt(s*(s-a)*(s-b)*(s-c))
	d=(2*ar)/a
	angle=math.acos((b**2+c**2+a**2)/(2*b*c))*57
	if angle<=90 and d>30:
		l=l+1
		cv.circle(img,far,5,[0,0,255],-1)
	#cv.line(img,start,end,[0,255,0],2)

l=l+1
font=cv.FONT_HERSHEY_SIMPLEX
if l==1:
	if arearatio<12:
		cv.putText(
		mask,'0',(0,50),font,2,(0,0,255),3,cv.LINE_AA)
	else:
		cv.putText(
		mask,'1',(0,50),font,2,(0,0,255),3,cv.LINE_AA)
elif l==2:
	cv.putText(mask,'2',(0,50),font,2,(0,0,255),3,cv.LINE_AA)
elif l==3:
	cv.putText(mask,'3',(0,50),font,2,(0,0,255),3,cv.LINE_AA)
elif l==4:
	cv.putText(mask,'4',(0,50),font,2,(0,0,255),3,cv.LINE_AA)
elif l==5:
	cv.putText(mask,'5',(0,50),font,2,(0,0,255),3,cv.LINE_AA)
else:
	cv.putText(mask,'reposition',(0,50),font,2,(0,0,255),3,cv.LINE_AA)

cv.imshow('mask',mask)
cv.imshow('hsv',hsv)
cv.imshow('img',img)




